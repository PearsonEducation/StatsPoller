#!/bin/bash
# chkconfig: 35 20 80
# description: A simple daemon wrapper to manage start/stop/restart/status of statspoller

export process_name="StatsPoller"
source /opt/$process_name/conf/statspoller.profile

NAME=`basename $0`
EXITCODE=0
STOP_PROCESS_TIMEOUT=15

start()
{
  PID=`pgrep -f StatsPoller.jar`

  cd /opt/StatsPoller
  if [ -z "$PID" ]; then
    (java $JAVA_OPTS >> /var/log/statspoller.log 2>&1 &)
  else
    printf "Already running on PID $PID!\n"
  fi
}

stop()
{
  PID=`pgrep -f StatsPoller.jar`

  if [ -n "$PID" ]; then
    kill $PID
    START_KILL_TIME=$(date +%s)

    while [[ ( -d /proc/$PID ) && ( -z `grep zombie /proc/$PID/status` ) ]]; do
        CURRENT_TIME=$(date +%s)
        ELAPSED_TIME=$[CURRENT_TIME-START_KILL_TIME]

        if [ $ELAPSED_TIME -gt $STOP_PROCESS_TIMEOUT ]; then
          EXITCODE=1
          break
        else
          sleep 1
        fi
    done
  else
    printf "Service isn't running\n"
  fi
}

status()
{
  PID=`pgrep -f StatsPoller.jar`

  if [ -n "$PID" ]; then
    ps -fp $PID
  else
    printf "Service isn't running\n"
  fi
}

case "$1" in
  start)
    start
    ;;
  status)
    status
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  *)
    printf "usage: $0 {status|start|stop|restart}\n"
    ;;
esac

exit $EXITCODE

